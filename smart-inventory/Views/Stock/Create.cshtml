@model smart_inventory.Models.ViewModels.StockViewModel

@{
    ViewData["Title"] = "Tạo phiếu kho";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">@ViewData["Title"]</h3>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" id="stockForm">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="DocumentNo" class="form-label"></label>
                                    <input asp-for="DocumentNo" class="form-control" placeholder="Nhập số chứng từ" />
                                    <span asp-validation-for="DocumentNo" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Type" class="form-label"></label>
                                    <select asp-for="Type" asp-items="Html.GetEnumSelectList<StockType>()" class="form-select">
                                        <option value="">-- Chọn loại chứng từ --</option>
                                    </select>
                                    <span asp-validation-for="Type" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="DocumentDate" class="form-label"></label>
                                    <input asp-for="DocumentDate" class="form-control" type="date" />
                                    <span asp-validation-for="DocumentDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Reference" class="form-label"></label>
                                    <input asp-for="Reference" class="form-control" placeholder="Nhập số tham chiếu (nếu có)" />
                                    <span asp-validation-for="Reference" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label"></label>
                            <textarea asp-for="Notes" class="form-control" rows="2" 
                                      placeholder="Nhập ghi chú cho phiếu kho (nếu có)"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <hr />

                        <div class="table-responsive">
                            <table class="table table-bordered" id="detailsTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>Sản phẩm</th>
                                        <th>Số lượng</th>
                                        <th>Đơn giá</th>
                                        <th>Thành tiền</th>
                                        <th>Ghi chú</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < Model.Details.Count; i++)
                                    {
                                        <tr class="detail-row">
                                            <td>
                                                <input type="hidden" asp-for="@Model.Details[i].Id" />
                                                <select asp-for="@Model.Details[i].ProductId" 
                                                        asp-items="ViewBag.Products"
                                                        class="form-select product-select"
                                                        data-index="@i">
                                                    <option value="">-- Chọn sản phẩm --</option>
                                                </select>
                                                <span asp-validation-for="@Model.Details[i].ProductId" class="text-danger"></span>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.Details[i].Quantity" 
                                                       class="form-control quantity-input" 
                                                       type="number" min="1"
                                                       data-index="@i" />
                                                <span asp-validation-for="@Model.Details[i].Quantity" class="text-danger"></span>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.Details[i].UnitPrice" 
                                                       class="form-control price-input" 
                                                       type="number" min="0"
                                                       data-index="@i" />
                                                <span asp-validation-for="@Model.Details[i].UnitPrice" class="text-danger"></span>
                                            </td>
                                            <td>
                                                <span class="total-price">0</span>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.Details[i].Notes" class="form-control" />
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-danger btn-sm remove-detail">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="mb-3">
                            <button type="button" class="btn btn-success" id="addDetail">
                                <i class="fas fa-plus"></i> Thêm dòng
                            </button>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Quay lại
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Tạo phiếu
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // Hàm tính tổng tiền cho một dòng
            function calculateLineTotal(row) {
                const quantity = parseFloat($(row).find('.quantity-input').val()) || 0;
                const price = parseFloat($(row).find('.price-input').val()) || 0;
                const total = quantity * price;
                $(row).find('.total-price').text(total.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
            }

            // Tính lại tổng tiền khi thay đổi số lượng hoặc đơn giá
            $(document).on('input', '.quantity-input, .price-input', function() {
                calculateLineTotal($(this).closest('tr'));
            });

            // Xử lý khi chọn sản phẩm
            $(document).on('change', '.product-select', function() {
                const row = $(this).closest('tr');
                const productId = $(this).val();
                if (productId) {
                    $.get(`/Stock/GetProductDetails/${productId}`, function(data) {
                        row.find('.price-input').val(data.price);
                        calculateLineTotal(row);
                    });
                }
            });

            // Xử lý thêm dòng mới
            $('#addDetail').click(function() {
                const lastRow = $('#detailsTable tbody tr:last');
                if (lastRow.length > 0) {
                    const newRow = lastRow.clone();
                    const index = parseInt(lastRow.find('.product-select').data('index')) + 1;

                    // Cập nhật các thuộc tính với index mới
                    newRow.find('select, input').each(function() {
                        const name = $(this).attr('name');
                        if (name) {
                            $(this).attr('name', name.replace(/\[\d+\]/, `[${index}]`));
                            $(this).attr('id', name.replace(/\[\d+\]/, `[${index}]`));
                        }
                    });

                    // Reset giá trị
                    newRow.find('select').val('');
                    newRow.find('input[type="number"]').val('');
                    newRow.find('input[type="text"]').val('');
                    newRow.find('.total-price').text('0');
                    newRow.find('.product-select').data('index', index);

                    // Thêm vào bảng
                    $('#detailsTable tbody').append(newRow);
                }
            });

            // Xử lý xóa dòng
            $(document).on('click', '.remove-detail', function() {
                const tbody = $('#detailsTable tbody');
                if (tbody.children().length > 1) {
                    $(this).closest('tr').remove();
                } else {
                    alert('Phải có ít nhất một dòng chi tiết!');
                }
            });

            // Validate form trước khi submit
            $('#stockForm').submit(function(e) {
                const details = $('#detailsTable tbody tr');
                let isValid = true;

                // Kiểm tra có ít nhất một dòng chi tiết
                if (details.length === 0) {
                    alert('Vui lòng thêm ít nhất một dòng chi tiết!');
                    isValid = false;
                }

                // Kiểm tra mỗi dòng phải có đủ thông tin
                details.each(function() {
                    const productId = $(this).find('.product-select').val();
                    const quantity = $(this).find('.quantity-input').val();
                    const price = $(this).find('.price-input').val();

                    if (!productId || !quantity || !price) {
                        alert('Vui lòng điền đầy đủ thông tin cho mỗi dòng!');
                        isValid = false;
                        return false;
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>
}